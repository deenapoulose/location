{"ast":null,"code":"var _jsxFileName = \"/home/deena/location/location/frontend/src/screens/HomeScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport validation from '../components/validation';\nimport Axios from 'axios';\nexport default function HomeScreen() {\n  const isValid = value => value !== '' && value !== '-';\n\n  const regexp = new RegExp(`^-?[0-9]*$`);\n  const [internalValue, setInternalValue] = useState(value);\n  const [valid, setValid] = useState(isValid(value));\n  const [values, setValues] = useState({\n    lang: \"\",\n    long: \"\",\n    km: \"\"\n  });\n  const [loclist, setloclist] = useState([]);\n  const [errors, setErrors] = useState({});\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  }; // const handleFormSubmit=(event)=>{\n  //   event.preventDefault();\n  //   setErrors(validation(values));\n  //   Axios.post('/api/products/read',{lang:values.lang,long:values.long,km:values.km})\n  //  .then((response)=>{\n  //       console.log(response);\n  //       setloclist(response.data);\n  //    })\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"locations\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: valid ? '' : 'invalid',\n    value: internalValue,\n    onChange: event => {\n      const newValue = event.target.value;\n\n      if (regexp.test(newValue)) {\n        setInternalValue(newValue);\n        let newValid = isValid(newValue);\n        setValid(newValid);\n\n        if (newValid) {\n          onChange(newValue);\n        }\n      }\n    },\n    onBlur: () => {\n      setInternalValue(value);\n      setValid(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, loclist.length > 0 ? loclist.map((value, key) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, value.name)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      className: \"medium\",\n      src: value.image,\n      alt: value.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 34\n      }\n    })));\n  }) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"no data\")))));\n}","map":{"version":3,"sources":["/home/deena/location/location/frontend/src/screens/HomeScreen.js"],"names":["React","useEffect","useState","validation","Axios","HomeScreen","isValid","value","regexp","RegExp","internalValue","setInternalValue","valid","setValid","values","setValues","lang","long","km","loclist","setloclist","errors","setErrors","handleChange","event","target","name","newValue","test","newValid","onChange","length","map","key","image"],"mappings":"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","sourcesContent":["import React, { useEffect,useState } from 'react';\nimport validation from '../components/validation'\nimport Axios from 'axios';\n\nexport default function HomeScreen() {\n  const isValid = (value) => value !== '' && value !== '-';\n  const regexp = new RegExp(`^-?[0-9]*$`);\n  const [internalValue, setInternalValue] = useState(value);\n  const [valid, setValid] = useState(isValid(value));\n  const [values,setValues] = useState({\n    lang:\"\",\n    long:\"\",\n    km:\"\",\n    \n  })\n  const[loclist,setloclist]=useState([]);\n  const[errors,setErrors] = useState({});\n  const handleChange=(event)=>{\n    setValues({\n      ...values,\n      [event.target.name]:event.target.value,\n    });\n   \n  }\n  // const handleFormSubmit=(event)=>{\n  //   event.preventDefault();\n  //   setErrors(validation(values));\n   \n  //   Axios.post('/api/products/read',{lang:values.lang,long:values.long,km:values.km})\n  //  .then((response)=>{\n  //       console.log(response);\n  //       setloclist(response.data);\n       \n  //    })\n  // }\n  return (\n    <div >\n      <h1>locations</h1>\n      <input type=\"text\"\n           className={ valid ? '' : 'invalid' }\n           value={ internalValue }\n           onChange={ (event) => {\n             const newValue = event.target.value;\n             if (regexp.test(newValue)) {\n               setInternalValue(newValue);\n               let newValid = isValid(newValue);\n               setValid(newValid);\n               if (newValid) {\n                 onChange(newValue);\n               }\n             }\n           } }\n           onBlur={ () => {\n             setInternalValue(value);\n             setValid(true);\n           } }\n    />\n{/*       \n     <form>\n       <div>\n         <label>Lattitude</label>\n         <input type=\"text\"name=\"lang\" value={values.lang} onChange={handleChange}></input>\n         {errors.lang &&<p>{errors.lang}</p>}\n       </div>\n       <div>\n         <label>Longtitude</label>\n         <input type=\"text\" name=\"long\" value={values.long} onChange={handleChange}></input>\n         {errors.long &&<p>{errors.long}</p>}\n       </div>\n       <div>\n         <label>km</label>\n         <input type=\"text\" name=\"km\" value={values.km} onChange={handleChange}></input>\n         {errors.km &&<p>{errors.km}</p>}\n       </div>\n       <button onClick={handleFormSubmit}>Find</button>\n     </form> */}\n      \n    \n \n      <div>\n        <table>\n          \n        <tbody>\n            {\n              loclist.length>0 ?(\n            \n            loclist.map((value,key)=>{\n              return(\n                        <tr key={key}>\n                          \n                            \n                            <td><h2>{value.name}</h2></td>\n\n                            <td> <img className=\"medium\" src={value.image} alt={value.name} /></td>\n                          \n                        </tr>\n                       \n            )})):(\n              <h1>no data</h1>\n            )\n          } \n            </tbody> \n\n        </table>\n        </div>\n  </div>\n  )\n\n  \n}\n"]},"metadata":{},"sourceType":"module"}