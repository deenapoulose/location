{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import Axios from 'axios';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { detailsProduct, updateProduct } from '../actions/productActions';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// import { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n// export default function AddScreen(props) {\n//   const productId = props.match.params.id;\n//   const [name, setName] = useState('');\n//   const [lati, setlati] = useState('');\n//   const [image, setImage] = useState('');\n//   const [long, setlong] = useState('');\n//   const [category, setCategory] = useState('');\n//   const [co, setco] = useState('');\n//   const [loadingUpload, setLoadingUpload] = useState(false);\n//   const [errorUpload, setErrorUpload] = useState('');\n//   const productDetails = useSelector((state) => state.productDetails);\n//   const { loading, error, product } = productDetails;\n//   // const userSignin = useSelector((state) => state.userSignin);\n//   // const { userInfo } = userSignin;\n//   const productUpdate = useSelector((state) => state.productUpdate);\n//   const {\n//     loading: loadingUpdate,\n//     error: errorUpdate,\n//     success: successUpdate,\n//   } = productUpdate;\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (successUpdate) {\n//       props.history.push('/placehistory');\n//     }\n//     if (!product || product._id !== productId || successUpdate) {\n//       dispatch({ type: PRODUCT_UPDATE_RESET });\n//       dispatch(detailsProduct(productId));\n//     } else {\n//       setName(product.name);\n//       setlati(product.latitude);\n//       setlong(product.longitude)\n//       setImage(product.image);\n//       setCategory(product.category);\n//       setco(product.location);\n//     }\n//   }, [product, dispatch, productId, successUpdate, props.history]);\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     // dispatch update product\n//     dispatch(\n//       updateProduct({\n//         _id: productId,\n//         name,\n//         lati,\n//         image,\n//         category,\n//        long,\n//        co\n//       })\n//     );\n//   };\n//   const uploadFileHandler = async (e) => {\n//     const file = e.target.files[0];\n//     const bodyFormData = new FormData();\n//     bodyFormData.append('image', file);\n//     setLoadingUpload(true);\n//     try {\n//       const { data } = await Axios.post('/api/uploads', bodyFormData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data'\n//           // Authorization: `Bearer ${userInfo.token}`,\n//         },\n//       });\n//       setImage(data);\n//       setLoadingUpload(false);\n//     } catch (error) {\n//       setErrorUpload(error.message);\n//       setLoadingUpload(false);\n//     }\n//   };\n//   return (\n//     <div>\n//       <form className=\"form\" onSubmit={submitHandler}>\n//         <div>\n//           <h1>Edit Product {productId}</h1>\n//         </div>\n//         {loadingUpdate && <LoadingBox></LoadingBox>}\n//         {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n//         {loading ? (\n//           <LoadingBox></LoadingBox>\n//         ) : error ? (\n//           <MessageBox variant=\"danger\">{error}</MessageBox>\n//         ) : (\n//           <>\n//             <div>\n//               <label htmlFor=\"name\">Name</label>\n//               <input\n//                 id=\"name\"\n//                 type=\"text\"\n//                 placeholder=\"Enter name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label htmlFor=\"lati\">Latitude</label>\n//               <input\n//                 id=\"latitude\"\n//                 type=\"text\"\n//                 placeholder=\"Enter Latitude\"\n//                 value={lati}\n//                 onChange={(e) => setlati(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label htmlFor=\"long\">Longtitude</label>\n//               <input\n//                 id=\"longtitude\"\n//                 type=\"text\"\n//                 placeholder=\"Enter Latitude\"\n//                 value={long}\n//                 onChange={(e) => setlong(e.target.value)}\n//               ></input>\n//             </div>\n//             {/* <div>\n//               <label htmlFor=\"long\">co-ordinate</label>\n//               <input\n//                 id=\"co\"\n//                 type=\"text\"\n//                 placeholder=\"codinate\"\n//                 value={co}\n//                 onChange={(e) => setco(e.target.value)}\n//               ></input>\n//             </div> */}\n//             <div>\n//               <label htmlFor=\"image\">Image</label>\n//               <input\n//                 id=\"image\"\n//                 type=\"text\"\n//                 placeholder=\"Enter image\"\n//                 value={image}\n//                 onChange={(e) => setImage(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label htmlFor=\"imageFile\">Image File</label>\n//               <input\n//                 type=\"file\"\n//                 id=\"imageFile\"\n//                 label=\"Choose Image\"\n//                 onChange={uploadFileHandler}\n//               ></input>\n//               {loadingUpload && <LoadingBox></LoadingBox>}\n//               {errorUpload && (\n//                 <MessageBox variant=\"danger\">{errorUpload}</MessageBox>\n//               )}\n//             </div>\n//             <div>\n//               <label htmlFor=\"category\">Category</label>\n//               <input\n//                 id=\"category\"\n//                 type=\"text\"\n//                 placeholder=\"Enter category\"\n//                 value={category}\n//                 onChange={(e) => setCategory(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label></label>\n//               <button className=\"primary\" type=\"submit\">\n//                 Update\n//               </button>\n//             </div>\n//           </>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/home/deena/Desktop/react/udemyshop/frontend/src/screens/AddScreen.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useState } from 'react';\n// import Axios from 'axios';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { detailsProduct, updateProduct } from '../actions/productActions';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// import { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\n// export default function AddScreen(props) {\n//   const productId = props.match.params.id;\n//   const [name, setName] = useState('');\n//   const [lati, setlati] = useState('');\n//   const [image, setImage] = useState('');\n//   const [long, setlong] = useState('');\n//   const [category, setCategory] = useState('');\n//   const [co, setco] = useState('');\n//   const [loadingUpload, setLoadingUpload] = useState(false);\n//   const [errorUpload, setErrorUpload] = useState('');\n\n//   const productDetails = useSelector((state) => state.productDetails);\n//   const { loading, error, product } = productDetails;\n//   // const userSignin = useSelector((state) => state.userSignin);\n//   // const { userInfo } = userSignin;\n//   const productUpdate = useSelector((state) => state.productUpdate);\n//   const {\n//     loading: loadingUpdate,\n//     error: errorUpdate,\n//     success: successUpdate,\n//   } = productUpdate;\n\n//   const dispatch = useDispatch();\n//   useEffect(() => {\n//     if (successUpdate) {\n//       props.history.push('/placehistory');\n//     }\n//     if (!product || product._id !== productId || successUpdate) {\n//       dispatch({ type: PRODUCT_UPDATE_RESET });\n//       dispatch(detailsProduct(productId));\n//     } else {\n//       setName(product.name);\n//       setlati(product.latitude);\n//       setlong(product.longitude)\n//       setImage(product.image);\n//       setCategory(product.category);\n//       setco(product.location);\n     \n//     }\n//   }, [product, dispatch, productId, successUpdate, props.history]);\n//   const submitHandler = (e) => {\n//     e.preventDefault();\n//     // dispatch update product\n//     dispatch(\n//       updateProduct({\n//         _id: productId,\n//         name,\n//         lati,\n//         image,\n//         category,\n//        long,\n//        co\n//       })\n//     );\n//   };\n//   const uploadFileHandler = async (e) => {\n//     const file = e.target.files[0];\n//     const bodyFormData = new FormData();\n//     bodyFormData.append('image', file);\n//     setLoadingUpload(true);\n//     try {\n//       const { data } = await Axios.post('/api/uploads', bodyFormData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data'\n//           // Authorization: `Bearer ${userInfo.token}`,\n//         },\n//       });\n//       setImage(data);\n//       setLoadingUpload(false);\n//     } catch (error) {\n//       setErrorUpload(error.message);\n//       setLoadingUpload(false);\n//     }\n//   };\n  \n//   return (\n//     <div>\n//       <form className=\"form\" onSubmit={submitHandler}>\n//         <div>\n//           <h1>Edit Product {productId}</h1>\n//         </div>\n//         {loadingUpdate && <LoadingBox></LoadingBox>}\n//         {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n//         {loading ? (\n//           <LoadingBox></LoadingBox>\n//         ) : error ? (\n//           <MessageBox variant=\"danger\">{error}</MessageBox>\n//         ) : (\n//           <>\n//             <div>\n//               <label htmlFor=\"name\">Name</label>\n//               <input\n//                 id=\"name\"\n//                 type=\"text\"\n//                 placeholder=\"Enter name\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label htmlFor=\"lati\">Latitude</label>\n//               <input\n//                 id=\"latitude\"\n//                 type=\"text\"\n//                 placeholder=\"Enter Latitude\"\n//                 value={lati}\n//                 onChange={(e) => setlati(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label htmlFor=\"long\">Longtitude</label>\n//               <input\n//                 id=\"longtitude\"\n//                 type=\"text\"\n//                 placeholder=\"Enter Latitude\"\n//                 value={long}\n//                 onChange={(e) => setlong(e.target.value)}\n//               ></input>\n//             </div>\n//             {/* <div>\n//               <label htmlFor=\"long\">co-ordinate</label>\n//               <input\n//                 id=\"co\"\n//                 type=\"text\"\n//                 placeholder=\"codinate\"\n//                 value={co}\n//                 onChange={(e) => setco(e.target.value)}\n//               ></input>\n//             </div> */}\n//             <div>\n//               <label htmlFor=\"image\">Image</label>\n//               <input\n//                 id=\"image\"\n//                 type=\"text\"\n//                 placeholder=\"Enter image\"\n//                 value={image}\n//                 onChange={(e) => setImage(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label htmlFor=\"imageFile\">Image File</label>\n//               <input\n//                 type=\"file\"\n//                 id=\"imageFile\"\n//                 label=\"Choose Image\"\n//                 onChange={uploadFileHandler}\n//               ></input>\n//               {loadingUpload && <LoadingBox></LoadingBox>}\n//               {errorUpload && (\n//                 <MessageBox variant=\"danger\">{errorUpload}</MessageBox>\n//               )}\n//             </div>\n           \n//             <div>\n//               <label htmlFor=\"category\">Category</label>\n//               <input\n//                 id=\"category\"\n//                 type=\"text\"\n//                 placeholder=\"Enter category\"\n//                 value={category}\n//                 onChange={(e) => setCategory(e.target.value)}\n//               ></input>\n//             </div>\n//             <div>\n//               <label></label>\n//               <button className=\"primary\" type=\"submit\">\n//                 Update\n//               </button>\n//             </div>\n//           </>\n//         )}\n//       </form>\n//     </div>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}